package graph

import (
	crand "crypto/rand"
	"fmt"
	mrand "math/rand"
)

type failReader struct{}

func (f failReader) Read(b []byte) (int, error) { return 0, fmt.Errorf("FAIL") }

func ExampleGenerateID() {
	// Force the crypto/rand.Read to fail
	// so that GenerateID will fall back
	// to math/rand
	crand.Reader = failReader{}
	mrand.Seed(22312)

	for i := 0; i < 10; i++ {
		fmt.Println(GenerateID())
	}
	// Output:
	// 231102862201362151074123917422819958322871
	// 211091713093341101141404116459893202232
	// 170227208113114432461261159515718311023644207
	// 216119158981152201811742352616813620914936248
	// 10021198341502077112437501011676782422
	// 15620234228159189851081122447012918130128174
	// 10317795103231145109891218910124061215420
	// 58128242352305716215150212741101226190
	// 170329321219860202127391382487723333797
	// 10432253636115510430171812441761972331914
}
